<?xml version="1.0" encoding="UTF-8" ?>
<!--
说明：
    1. 文件的命名和加载顺序有关
       logback.xml早于application.yml加载，logback-spring.xml晚于application.yml加载
       如果logback配置需要使用application.yml中的属性，需要命名为logback-spring.xml
    2. logback使用application.yml中的属性
       使用springProperty才可使用application.yml中的值 可以设置默认值

如果非要用yaml文件，那么只能使用绝对路径，例如：
logback-spring.xml引入文件:
<property file="${HOME}/configuration/application.yaml"/>
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <property resource="bootstrap.properties"/>
    <property name="APP_NAME" value="${spring.application.name}"/>
    <!-- 生成日志文件目录 -->
    <property name="LOG_FILE" value="${logging.path}"/>
    <contextName>${APP_NAME}</contextName>

    <turboFilter class="com.glsx.plat.common.loggin.BootTurboFilter">
        <Marker>${APP_NAME}</Marker>
    </turboFilter>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <!--    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />-->
    <!--    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />-->
    <!--    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />-->

    <!-- 配置日志输出参数，彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!-- 控制台打印日志 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in the console logs-->
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 日志定时生成压缩文件 -->​
    <appender name="flatfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>


    <!-- 日志进行格式化 -->
    <!--    <appender name="logstash" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--        <file>${LOG_FILE}.json</file>-->
    <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--            <fileNamePattern>${LOG_FILE}.json.%d{yyyy-MM-dd}.gz</fileNamePattern>-->
    <!--            <maxHistory>7</maxHistory>-->
    <!--        </rollingPolicy>-->
    <!--        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">-->
    <!--            <providers>-->
    <!--                <timestamp>-->
    <!--                    <timeZone>UTC</timeZone>-->
    <!--                </timestamp>-->
    <!--                <pattern>-->
    <!--                    <pattern>-->
    <!--                        {-->
    <!--                        "severity": "%level",-->
    <!--                        "service": "${APP_NAME:-}",-->
    <!--                        "trace": "%X{X-B3-TraceId:-}",-->
    <!--                        "span": "%X{X-B3-SpanId:-}",-->
    <!--                        "parent": "%X{X-B3-ParentSpanId:-}",-->
    <!--                        "exportable": "%X{X-Span-Export:-}",-->
    <!--                        "pid": "${PID:-}",-->
    <!--                        "thread": "%thread",-->
    <!--                        "class": "%logger{40}",-->
    <!--                        "rest": "%message"-->
    <!--                        }-->
    <!--                    </pattern>-->
    <!--                </pattern>-->
    <!--            </providers>-->
    <!--        </encoder>-->
    <!--    </appender>-->
    ​
    <root level="INFO">
        <appender-ref ref="console"/>
        <appender-ref ref="flatfile"/>
        <!-- uncomment this to have also JSON logs -->
        <!--        <appender-ref ref="logstash"/>-->
    </root>
</configuration>